<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:annotation><xs:documentation xml:lang="en">
      This is the first draft for a XML format to describe a virtual audio-visual
      scene in the context of the TWO!EARS audio-visual simulation tool. The
      format is based on the ideas for the "audio scene description"-file of the
      SoundScape Renderer.
      (https://github.com/SoundScapeRenderer/ssr/blob/master/data/asdf.xsd)

      Author: Fiete Winter
      Date: July 2014
  </xs:documentation></xs:annotation>

  <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  XML-Elements
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

  <xs:element name="scene">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="source" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="sink" minOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="BlockSize" type="xs:positiveInteger"/>
        <xs:attribute name="SampleRate" type="xs:positiveInteger"/>
        <xs:attribute name="NumberOfThreads" type="xs:positiveInteger"/>
        <xs:attribute name="MaximumDelay" type="NonNegativeDecimal"/>
        <xs:attribute name="HRIRs" type="xs:token"/>
      </xs:complexType>
  </xs:element>

  <xs:element name="source" type="source_t"/>
  <xs:element name="sink" type="sink_t"/>

  <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  TYPE-DEFINITIONS
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

  <!-- Base-Type for Scene Objects: -->
  <xs:complexType name="object_t">
    <xs:attribute name="Position" type="coord3D_t" use="optional"/>
    <xs:attribute name="UnitUp" type="coord3D_t" use="optional"/>
    <xs:attribute name="UnitFront" type="coord3D_t" use="optional"/>
  </xs:complexType>

  <!-- Type for Coordinates -->
  <xs:simpleType name="coord3D_t">
    <xs:restriction base="decimalList">
      <xs:length value="3"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Types for Sources: -->
  <xs:complexType name="source_t">
    <xs:complexContent>
      <xs:extension base="object_t">
        <xs:sequence>
          <xs:element name="buffer" type="buffer_t" />
        </xs:sequence>
        <xs:attribute name="Mute" type="xs:boolean" use="optional"/>
        <xs:attribute name="Type" type="source_model_t" default="point"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="source_model_t">
    <xs:restriction base="xs:token">
      <xs:enumeration value="plane"/>
      <xs:enumeration value="point"/>
      <xs:enumeration value="direct"/>
      <xs:enumeration value="pwd"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Types for Sinks: -->
  <xs:complexType name="sink_t">
    <xs:complexContent>
      <xs:extension base="object_t">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Types for Walls: -->
  <xs:complexType name="wall_t">
    <xs:complexContent>
      <xs:extension base="object_t">
        <xs:attribute name="ReflectionCoeff" type="reflection_t" default="1.0"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="reflection_t">
    <xs:restriction base="xs:decimal">
      <xs:minExclusive value="0"/>
      <xs:maxInclusive value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Types for Buffers: -->
  <xs:complexType name="buffer_t">
    <xs:attribute name="Type" type="buffer_model_t"/>
    <xs:attribute name="ChannelMapping" type="positiveIntegerList" default="1"/>
    <xs:attribute name="File" type="xs:token" use="optional"/>
    <xs:attribute name="Variance" type="NonNegativeDecimal" default="1.0"/>
    <xs:attribute name="Mean" type="xs:decimal" default="0.0"/>
    <xs:attribute name="StartPointer" type="positiveIntegerList" use="optional"/>
  </xs:complexType>

  <xs:simpleType name="buffer_model_t">
    <xs:restriction base="xs:token">
      <xs:enumeration value="fifo"/>
      <xs:enumeration value="ring"/>
      <xs:enumeration value="noise"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- General Types -->
  <xs:simpleType name="NonNegativeDecimal">
    <xs:restriction base="xs:decimal">
      <xs:minInclusive value="0.0"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="decimalList">
    <xs:list itemType="xs:decimal"/>
  </xs:simpleType>
  <xs:simpleType name="integerList">
    <xs:list itemType="xs:integer"/>
  </xs:simpleType>
  <xs:simpleType name="positiveIntegerList">
    <xs:list itemType="xs:positiveInteger"/>
  </xs:simpleType>
</xs:schema>
