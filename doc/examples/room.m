sim = simulator.SimulatorConvexRoom();
set(sim, ...
    'MaximumDelay', 0.05, ...
    'PreDelay', 0.0, ...
    'HRIRDataset', simulator.DirectionalIR( ...
        'impulse_responses/qu_kemar_anechoic/QU_KEMAR_anechoic_3m.sofa'), ...
    'Sources', {simulator.source.ISMGroup}, ...
    'Sinks', simulator.AudioSink(2), ...
    'Room', simulator.room.Shoebox ...
    );
  
  
  
set(sim.Sources{1}, ...
    'Name', 'Cello', ...
    'Position', [2.5; 2.5; 0], ...
    'AudioBuffer', simulator.buffer.FIFO(1), ...
    'Room', sim.Room ...
    );
set(sim.Sources{1}.AudioBuffer, ...
    'File', 'stimuli/anechoic/instruments/anechoic_cello.wav' ...
    );

% define floor of the room
set(sim.Room, ...
    'Name', 'Room', ...
    'Position', [-3; -3; -1.75], ...
    'UnitX', [1; 0; 0], ...
    'UnitZ', [0; 0; 1], ...
    'LengthX', 6.0, ...
    'LengthY', 6.0, ...
    'LengthZ', 2.5, ...
    'ReverberationMaxOrder', 8 ...
    ); 

sim.set('Init',true);
while ~sim.isFinished()
    sim.set('Refresh',true);  % refresh all objects
    sim.set('Process',true);
end
data = sim.Sinks.getData();
sim.Sinks.saveFile('out_room.wav',sim.SampleRate);
sim.set('ShutDown',true);
